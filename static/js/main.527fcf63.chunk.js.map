{"version":3,"sources":["body.js","App.js","index.js"],"names":["Body","totalData","temp","humidity","pressure","country","sunset","weatherMood","speed","input","useState","weatherIcon","setWeatherIcon","date","Date","time","toLocaleTimeString","getHours","getMinutes","useEffect","Container","className","id","Row","Col","md","setInterval","toLocaleString","App","setInput","setTotalData","submitData","a","url","fetch","response","json","data","console","log","main","sys","weather","wind","type","placeholder","autoFocus","value","onChange","e","getData","target","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.527fcf63.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport {\r\n  WiDayRainWind,\r\n  WiDayHaze,\r\n  WiHumidity,\r\n  WiRain,\r\n  WiStrongWind,\r\n  WiDaySunny,\r\n  WiDayFog,\r\n  WiDayCloudyHigh,\r\n  WiDayCloudyWindy,\r\n  WiDust,\r\n} from \"react-icons/wi\";\r\n\r\nconst Body = ({ totalData }) => {\r\n  const {\r\n    temp,\r\n    humidity,\r\n    pressure,\r\n    country,\r\n    sunset,\r\n    weatherMood,\r\n    speed,\r\n    input,\r\n  } = totalData;\r\n\r\n  const [weatherIcon, setWeatherIcon] = useState(\"\");\r\n\r\n  const date = new Date(sunset * 1000);\r\n  const time = date.toLocaleTimeString();\r\n  const curDate = `${date.getHours()}:${date.getMinutes()}`;\r\n\r\n  useEffect(() => {\r\n    if (weatherMood) {\r\n      switch (weatherMood) {\r\n        case \"Clear\":\r\n          setWeatherIcon(\"wi-day-sunny\");\r\n          break;\r\n        case \"Haze\":\r\n          setWeatherIcon(\"wi-day-fog\");\r\n          break;\r\n        case \"Clouds\":\r\n          setWeatherIcon(\"wi-day-cloudy\");\r\n          break;\r\n        case \"Mist\":\r\n          setWeatherIcon(\"wi-hail\");\r\n          break;\r\n        case \"Rain\":\r\n          setWeatherIcon(\"wi-day-rain\");\r\n          break;\r\n        default:\r\n          setWeatherIcon(\"wi-day-sprinkle\");\r\n          break;\r\n      }\r\n    }\r\n  }, [weatherMood]);\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"mt-5\" id=\"container\">\r\n        <center>\r\n          <Row className=\"first-row bg-light\">\r\n            <Col className=\"icon-main\">\r\n              <i className={`wi ${weatherIcon}`}></i>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"second-row d-flex align-items-center text-light\">\r\n            <Col md={8}>\r\n              <Row className=\"d-flex align-items-center\">\r\n                <Col>\r\n                  <span className=\"display-2\">{temp}&deg;</span>\r\n                </Col>\r\n                <Col>\r\n                  <h1 className=\"display-5\">{weatherMood}</h1>\r\n                  <p className=\"fs-5\">\r\n                    {input}, {country}\r\n                  </p>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col md={4} className=\"bg-teal\">\r\n              <p>\r\n                {setInterval(() => {\r\n                  return new Date().toLocaleString();\r\n                }, 1000)}\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"third-row bg-light\">\r\n            <Col md={3} className=\"extra-info\">\r\n              <Row className=\"icon-bottom\">\r\n                <Col md={3} className=\"render-bi\">\r\n                  <WiDayHaze />\r\n                </Col>\r\n                <Col md={9}>\r\n                  <h4>{time}</h4>\r\n                  <h5>Sunset</h5>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col md={3} className=\"extra-info\">\r\n              <Row className=\"icon-bottom\">\r\n                <Col md={3} className=\"render-bi\">\r\n                  <WiHumidity />\r\n                </Col>\r\n                <Col md={9}>\r\n                  <h4>{humidity}</h4>\r\n                  <h5>Humidity</h5>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col md={3} className=\"extra-info\">\r\n              <Row className=\"icon-bottom\">\r\n                <Col md={3} className=\"render-bi\">\r\n                  <WiRain />\r\n                </Col>\r\n                <Col md={9}>\r\n                  <h4>{pressure}</h4>\r\n                  <h5>pressure</h5>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col md={3} className=\"extra-info\">\r\n              <Row className=\"icon-bottom\">\r\n                <Col md={3} className=\"render-bi\">\r\n                  <WiStrongWind />\r\n                </Col>\r\n                <Col md={9}>\r\n                  <h4>{speed}</h4>\r\n                  <h5>Wind</h5>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </center>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","// import React from \"react\";\nimport React, { useState, useEffect } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport Body from \"./body\";\nimport \"./scss/main.css\";\nconst App = () => {\n  const [input, setInput] = useState(\"hyderabad\");\n  const [totalData, setTotalData] = useState({});\n  const getData = (e) => {\n    setInput(e);\n  };\n  let submitData = async () => {\n    try {\n      const url = `https://api.openweathermap.org/data/2.5/weather?q=${input}&units=metric&appid=248cbc8660fdb4cc099d18b7a6920c54`;\n      const response = await fetch(url);\n      const data = await response.json();\n      console.log(data);\n      const { temp, humidity, pressure } = data.main;\n      const { country, sunset } = data.sys;\n      const { main: weatherMood } = data.weather[0];\n      const { speed } = data.wind;\n      const totalData = {\n        temp,\n        humidity,\n        pressure,\n        country,\n        sunset,\n        weatherMood,\n        speed,\n        input,\n      };\n      setTotalData(totalData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    submitData();\n  }, []);\n  return (\n    <>\n      <h1 className=\"application-title\">weather application</h1>\n      <Container className=\"mt-5\">\n        <center>\n          <div className=\"input-group\">\n            <input\n              type=\"search\"\n              placeholder=\"enter city..\"\n              autoFocus\n              value={input}\n              onChange={(e) => getData(e.target.value)}\n            />\n            <button type=\"button\" onClick={submitData}>\n              search\n            </button>\n          </div>\n        </center>\n      </Container>\n      <Body totalData={totalData} />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from \"./App\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App className=\"app\" />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}